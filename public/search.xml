<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[css-doodle玩一玩肚兜]]></title>
    <url>%2FBlog%2Fpublic%2F2018%2F06%2F24%2Fcss-doodle%E8%82%9A%E5%85%9C%E7%9A%84%E5%A5%87%E5%B9%BB%E4%B9%8B%E6%97%85%2F</url>
    <content type="text"><![CDATA[无意间发现有个叫肚兜（doodle）的东西，老司机一看就来劲，所以来尝尝鲜，顺便github赠与宝贵的一颗star 先来几个demo吸引下吃瓜群众 作者：蓝江_老涌链接：https://www.jianshu.com/p/13ce377e6b73來源：简书简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。 doodle是一个基于webcomponent的组件这个和vue里面的组件极其相似，据我推测，vue里面使用了这个方法去实现组件的注册与使用(有空可以研究下vue的组件注册是否用到过此方法)]]></content>
      <categories>
        <category>css</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[开启我的新博客之旅]]></title>
    <url>%2FBlog%2Fpublic%2F2018%2F06%2F18%2F%E5%BC%80%E5%90%AF%E6%88%91%E7%9A%84%E6%96%B0%E5%8D%9A%E5%AE%A2%E4%B9%8B%E6%97%85%2F</url>
    <content type="text"><![CDATA[鉴于博客园的博客实在长得欠妥，便顺从心意，转战hexo。利用中秋假期来活动活动筋骨。 博客银弹参考文章 ①为博客加上卡哇伊的妹子引用一个骚气十足的插件(hexo-helper-live2d) 1234567891011121314live2d: enable: true scriptFrom: local # 默认 pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径) pluginJsPath: lib/ # 脚本文件相对与插件根目录路径 pluginModelPath: assets/ # 模型文件相对与插件根目录路径 model: use: live2d-widget-model-wanko # npm-module package name display: position: right width: 150 height: 300 mobile: show: true 此插件可以选择几十种图案live2d-widget-models*注意这里我亲测暂时无效，作者是不是逗我玩的!!! ①点击页面有canvas的炫酷粒子效果1)在themes/next/source/js/src中添加一个XX.jsuse strict";function updateCoords(e) &#123; (pointerX = (e.clientX || e.touches[0].clientX) - canvasEl.getBoundingClientRect().left), (pointerY = e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top);&#125;function setParticuleDirection(e) &#123; var t = (anime.random(0, 360) * Math.PI) / 180, a = anime.random(50, 180), n = [-1, 1][anime.random(0, 1)] * a; return &#123; x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) &#125;;&#125;function createParticule(e, t) &#123; var a = &#123;&#125;; return ( (a.x = e), (a.y = t), (a.color = colors[anime.random(0, colors.length - 1)]), (a.radius = anime.random(16, 32)), (a.endPos = setParticuleDirection(a)), (a.draw = function() &#123; ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), (ctx.fillStyle = a.color), ctx.fill(); &#125;), a );&#125;function createCircle(e, t) &#123; var a = &#123;&#125;; return ( (a.x = e), (a.y = t), (a.color = "#F00"), (a.radius = 0.1), (a.alpha = 0.5), (a.lineWidth = 6), (a.draw = function() &#123; (ctx.globalAlpha = a.alpha), ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), (ctx.lineWidth = a.lineWidth), (ctx.strokeStyle = a.color), ctx.stroke(), (ctx.globalAlpha = 1); &#125;), a );&#125;function renderParticule(e) &#123; for (var t = 0; t &lt; e.animatables.length; t++) &#123; e.animatables[t].target.draw(); &#125;&#125;function animateParticules(e, t) &#123; for (var a = createCircle(e, t), n = [], i = 0; i &lt; numberOfParticules; i++) &#123; n.push(createParticule(e, t)); &#125; anime .timeline() .add(&#123; targets: n, x: function(e) &#123; return e.endPos.x; &#125;, y: function(e) &#123; return e.endPos.y; &#125;, radius: 0.1, duration: anime.random(1200, 1800), easing: "easeOutExpo", update: renderParticule &#125;) .add(&#123; targets: a, radius: anime.random(80, 160), lineWidth: 0, alpha: &#123; value: 0, easing: "linear", duration: anime.random(600, 800) &#125;, duration: anime.random(1200, 1800), easing: "easeOutExpo", update: renderParticule, offset: 0 &#125;);&#125;function debounce(e, t) &#123; var a; return function() &#123; var n = this, i = arguments; clearTimeout(a), (a = setTimeout(function() &#123; e.apply(n, i); &#125;, t)); &#125;;&#125;var canvasEl = document.querySelector(".fireworks");if (canvasEl) &#123; var ctx = canvasEl.getContext("2d"), numberOfParticules = 30, pointerX = 0, pointerY = 0, tap = "mousedown", colors = ["#FF1461", "#18FF92", "#5A87FF", "#FBF38C"], setCanvasSize = debounce(function() &#123; (canvasEl.width = 2 * window.innerWidth), (canvasEl.height = 2 * window.innerHeight), (canvasEl.style.width = window.innerWidth + "px"), (canvasEl.style.height = window.innerHeight + "px"), canvasEl.getContext("2d").scale(2, 2); &#125;, 500), render = anime(&#123; duration: 1 / 0, update: function() &#123; ctx.clearRect(0, 0, canvasEl.width, canvasEl.height); &#125; &#125;); document.addEventListener( tap, function(e) &#123; "sidebar" !== e.target.id &amp;&amp; "toggle-sidebar" !== e.target.id &amp;&amp; "A" !== e.target.nodeName &amp;&amp; "IMG" !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)); &#125;, !1 ), setCanvasSize(), window.addEventListener("resize", setCanvasSize, !1);&#125;("use strict");function updateCoords(e) &#123; (pointerX = (e.clientX || e.touches[0].clientX) - canvasEl.getBoundingClientRect().left), (pointerY = e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top);&#125;function setParticuleDirection(e) &#123; var t = (anime.random(0, 360) * Math.PI) / 180, a = anime.random(50, 180), n = [-1, 1][anime.random(0, 1)] * a; return &#123; x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) &#125;;&#125;function createParticule(e, t) &#123; var a = &#123;&#125;; return ( (a.x = e), (a.y = t), (a.color = colors[anime.random(0, colors.length - 1)]), (a.radius = anime.random(16, 32)), (a.endPos = setParticuleDirection(a)), (a.draw = function() &#123; ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), (ctx.fillStyle = a.color), ctx.fill(); &#125;), a );&#125;function createCircle(e, t) &#123; var a = &#123;&#125;; return ( (a.x = e), (a.y = t), (a.color = "#F00"), (a.radius = 0.1), (a.alpha = 0.5), (a.lineWidth = 6), (a.draw = function() &#123; (ctx.globalAlpha = a.alpha), ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), (ctx.lineWidth = a.lineWidth), (ctx.strokeStyle = a.color), ctx.stroke(), (ctx.globalAlpha = 1); &#125;), a );&#125;function renderParticule(e) &#123; for (var t = 0; t &lt; e.animatables.length; t++) &#123; e.animatables[t].target.draw(); &#125;&#125;function animateParticules(e, t) &#123; for (var a = createCircle(e, t), n = [], i = 0; i &lt; numberOfParticules; i++) &#123; n.push(createParticule(e, t)); &#125; anime .timeline() .add(&#123; targets: n, x: function(e) &#123; return e.endPos.x; &#125;, y: function(e) &#123; return e.endPos.y; &#125;, radius: 0.1, duration: anime.random(1200, 1800), easing: "easeOutExpo", update: renderParticule &#125;) .add(&#123; targets: a, radius: anime.random(80, 160), lineWidth: 0, alpha: &#123; value: 0, easing: "linear", duration: anime.random(600, 800) &#125;, duration: anime.random(1200, 1800), easing: "easeOutExpo", update: renderParticule, offset: 0 &#125;);&#125;function debounce(e, t) &#123; var a; return function() &#123; var n = this, i = arguments; clearTimeout(a), (a = setTimeout(function() &#123; e.apply(n, i); &#125;, t)); &#125;;&#125;var canvasEl = document.querySelector(".fireworks");if (canvasEl) &#123; var ctx = canvasEl.getContext("2d"), numberOfParticules = 30, pointerX = 0, pointerY = 0, tap = "mousedown", colors = ["#FF1461", "#18FF92", "#5A87FF", "#FBF38C"], setCanvasSize = debounce(function() &#123; (canvasEl.width = 2 * window.innerWidth), (canvasEl.height = 2 * window.innerHeight), (canvasEl.style.width = window.innerWidth + "px"), (canvasEl.style.height = window.innerHeight + "px"), canvasEl.getContext("2d").scale(2, 2); &#125;, 500), render = anime(&#123; duration: 1 / 0, update: function() &#123; ctx.clearRect(0, 0, canvasEl.width, canvasEl.height); &#125; &#125;); document.addEventListener( tap, function(e) &#123; "sidebar" !== e.target.id &amp;&amp; "toggle-sidebar" !== e.target.id &amp;&amp; "A" !== e.target.nodeName &amp;&amp; "IMG" !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)); &#125;, !1 ), setCanvasSize(), window.addEventListener("resize", setCanvasSize, !1);&#125; 1)在themes/next/layout/_layout.swig,在L2Dwidget.init({"pluginJsPath":"lib/","pluginModelPath":"assets/","pluginRootPath":"live2dw/"});上面写下如下代码123&lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;&#123;&#123; url_for(theme.js) &#125;&#125;/js/src/XX.js&quot;&gt;&lt;/script&gt; 部署路径问题要仔细琢磨&amp;部署完有个https与http请求混用问题部署路径要设置hexo的config.yml里面url与root,比如：12url: https://huigegegithub.github.io/Blog/publicroot: /Blog/public/ https与http请求混用问题:不指定协议种类，通过//代替http与https Markdown文档助手（头次玩，有点飘）给个参考文档markdown]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
</search>
